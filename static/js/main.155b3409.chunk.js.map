{"version":3,"sources":["styles/ItemDetails.module.scss","styles/BottomNav.module.scss","styles/SearchBar.module.scss","styles/LoadingAnim.module.scss","styles/AppBar.module.scss","serviceWorker.js","Components/CardItem.js","Components/Item.js","Components/SearchBar.js","Components/BottomNav.js","Components/ItemDetails.js","actions/actions.js","Components/LoadingAnim.js","Containers/ItemList.js","Components/AppBar.js","Containers/App.js","reducers/filter.js","reducers/items.js","reducers/root.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CardItem","Card","CardActionArea","CardMedia","component","alt","height","image","title","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","Item","pathLink","to","SearchBar","items","changeFilter","Autocomplete","className","styles","bar","onInputChange","event","newInputValue","onChange","newValue","options","getOptionLabel","option","renderInput","params","TextField","label","BottomNav","React","useState","value","setValue","BottomNavigation","position","showLabels","BottomNavigationAction","flex","icon","ItemDetails","itemId","useParams","page","description","CircularIndeterminate","CircularProgress","ItemList","useSelector","state","category","dispatch","useDispatch","useRouteMatch","useEffect","fetch","then","response","json","data","type","getCategories","loadCategories","itemList","filter","item","map","key","path","error","ButtonAppBar","AppBar","Toolbar","IconButton","edge","aria-label","href","App","filterReducer","action","itemReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,YAAc,iCAAiC,MAAQ,6B,mBCA1GD,EAAOC,QAAU,CAAC,SAAW,8B,mBCA7BD,EAAOC,QAAU,CAAC,IAAM,yB,mBCAxBD,EAAOC,QAAU,CAAC,SAAW,gC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,uB,kLCWLC,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAC1B,2D,+FCbS,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,MACVC,IAAI,wBACJC,OAAO,MACPC,MAAM,gIACNC,MAAM,0BAER,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,UAGA,kBAACM,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBT,UAAU,KAA5D,mIAMJ,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,SAGA,kBAACE,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,gBCNOI,MAlBf,YAAoC,IAApBT,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACrB,OACE,oCACE,kBAAC,IAAD,CAAMC,GAAID,GACR,kBAAClB,EAAD,MACA,kBAACe,EAAA,EAAD,CAAQH,QAAQ,YAAYC,MAAM,WAChC,6BAAML,O,mCCeDY,EArBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OAChB,kBAACC,EAAA,EAAD,CACEC,UAAWC,IAAOC,IAClBC,cAAe,SAACC,EAAOC,GACC,KAAlBA,GAAwBP,EAAa,QAE3CQ,SAAU,SAACF,EAAOG,GAAR,OAAsBA,EAAWT,EAAaS,GAAY,OACpEC,QAASX,EACTY,eAAgB,SAAAC,GAAM,OAAIA,GAE1BC,YAAa,SAAAC,GAAM,OAAI,kBAACC,EAAA,EAAD,iBAAeD,EAAf,CAAuBE,MAAM,iBAAiB1B,QAAQ,kB,8FCRlE,SAAS2B,IAAa,IAAD,EACRC,IAAMC,SAAS,GADP,mBAC3BC,EAD2B,KACpBC,EADoB,KAGlC,OACE,kBAACC,EAAA,EAAD,CACEpB,UAAWC,IAAOoB,SAClBH,MAAOA,EACPZ,SAAU,SAACF,EAAOG,GAChBY,EAASZ,IAEXe,YAAU,GAEV,kBAACC,EAAA,EAAD,CAAwBvB,UAAWC,IAAOuB,KAAMV,MAAM,OAAOW,KAAM,kBAAC,IAAD,QACnE,kBAACF,EAAA,EAAD,CAAwBT,MAAM,YAAYW,KAAM,kBAAC,IAAD,QAChD,kBAACF,EAAA,EAAD,CAAwBT,MAAM,QAAQW,KAAM,kBAAC,IAAD,S,qBCFnCC,MAbf,WAAwB,IACdC,EAAWC,cAAXD,OACR,OACE,oCACE,yBAAK3B,UAAWC,IAAO4B,MACrB,yBAAK7B,UAAWC,IAAOjB,OAAQ2C,GAC/B,yBAAK3B,UAAWC,IAAO6B,aAAvB,eACA,kBAACf,EAAD,SCFR,I,0BCRe,SAASgB,IACtB,OACE,yBAAK/B,UAAWC,IAAOoB,UACrB,kBAACW,EAAA,EAAD,OCMN,IA6CeC,EA7CE,WACf,IAAMpC,EAAQqC,aAAY,SAAAC,GAAK,OAAIA,EAAMtC,SACnCuC,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACtCC,EAAWC,cAEX/D,EAAQgE,cAEdC,qBAAU,YFRW,SAAAH,GACrBI,MAAM,yCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAXN,SAAuBQ,GACrB,MAAO,CACLC,KAAM,oBACND,QAQWE,CAAcF,OEKzBG,CAAeX,KAEjB,CAACD,IAED,IACIa,EAAW,GAEf,IAEEA,GAD6B,QAAbb,EAAqBvC,EAAM,GAAKA,EAAM,GAAGqD,QAAO,SAAAC,GAAI,OAAIA,IAASf,MACxDgB,KAAI,SAAAD,GAAI,OAC/B,kBAAC,EAAD,CACEnE,MAAOmE,EACPE,IAAKF,EACLzD,SAAQ,UAAKnB,EAAM+E,KAAX,YAAmBH,QAG/B,MAAOI,GACP,OAAO,kBAAC,EAAD,MAGT,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAI,UAAK/E,EAAM+E,KAAX,aACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM/E,EAAM+E,MACjB,6BACE,kBAAC,EAAD,CAAWzD,MAAOA,EAAM,GAAIC,aAhCjB,SAAAoB,GAAK,OAAImB,EFjBX,SAAAD,GAAQ,MAAK,CAChCU,KAAM,gBACNV,YEeuCtC,CAAaoB,OAiCzC+B,O,+ECzCE,SAASO,KACtB,OACE,kBAACC,EAAA,EAAD,CAAQpC,SAAS,UACf,kBAACqC,EAAA,EAAD,CAAS1D,UAAWC,KAAOuB,MACzB,kBAACmC,EAAA,EAAD,CAAYC,KAAK,QAAQvE,MAAM,UAAUwE,aAAW,OAAOC,KAAK,gBAC9D,kBAAC,IAAD,OAEF,kBAAC5E,EAAA,EAAD,CAAYE,QAAQ,MAApB,OAGA,kBAACuE,EAAA,EAAD,CAAYC,KAAK,MAAMvE,MAAM,UAAUwE,aAAW,OAAOC,KAAK,gBAC5D,kBAAC,IAAD,SCTK,SAASC,KACtB,OACE,6BACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOT,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAU3D,GAAG,kBCrBzB,IAOeqE,GAPO,WAA4B,IAA3B7B,EAA0B,uDAAlB,MAAO8B,EAAW,uCAC/C,MAAoB,kBAAhBA,EAAOnB,KACH,GAAN,OAAUmB,EAAO7B,UAEZD,GCOM+B,GAXK,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAI8B,EAAW,uCAC1C,OAAQA,EAAOnB,MACb,IAAK,oBACH,MAAO,CACLmB,EAAOpB,MAEX,QACE,OAAOV,ICEEgC,GALKC,YAAgB,CAClCvE,MAAOqE,GACP9B,SAAU4B,KCINK,GAAQC,YAAYH,GAAaI,YAAgBC,MAEvDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,QAGJO,SAASC,eAAe,SdiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5B,GACL6B,QAAQ7B,MAAMA,EAAM8B,c","file":"static/js/main.155b3409.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ItemDetails_page__3cHRh\",\"description\":\"ItemDetails_description__kz4k9\",\"title\":\"ItemDetails_title__12DKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"BottomNav_position__1uiag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SearchBar_bar__31-Xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"LoadingAnim_position__3uj8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"AppBar_flex__W2P2d\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {\n  Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography,\n} from '@material-ui/core';\n\nexport default function CardItem() {\n  return (\n    <Card>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image=\"https://images.pexels.com/photos/956981/milky-way-starry-sky-night-sky-star-956981.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport CardItem from './CardItem';\n\nfunction Item({ title, pathLink }) {\n  return (\n    <>\n      <Link to={pathLink}>\n        <CardItem />\n        <Button variant=\"contained\" color=\"default\">\n          <div>{title}</div>\n        </Button>\n      </Link>\n    </>\n  );\n}\n\nItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  pathLink: PropTypes.string.isRequired,\n};\n\nexport default Item;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/SearchBar.module.scss';\n\nconst SearchBar = ({ items, changeFilter }) => (\n  <Autocomplete\n    className={styles.bar}\n    onInputChange={(event, newInputValue) => {\n      if (newInputValue === '') { changeFilter('All'); }\n    }}\n    onChange={(event, newValue) => (newValue ? changeFilter(newValue) : 'ALL')}\n    options={items}\n    getOptionLabel={option => option}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n    renderInput={params => <TextField {...params} label=\"Filter Results\" variant=\"outlined\" />}\n  />\n);\n\nSearchBar.propTypes = {\n  // items: PropTypes.arrayOf(PropTypes.shape({\n  //   title: PropTypes.string,\n  // })).isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport StarIcon from '@material-ui/icons/Star';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport styles from '../styles/BottomNav.module.scss';\n\nexport default function BottomNav() {\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      className={styles.position}\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n    >\n      <BottomNavigationAction className={styles.flex} label=\"Like\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Favourite\" icon={<StarIcon />} />\n      <BottomNavigationAction label=\"Share\" icon={<ShareIcon />} />\n    </BottomNavigation>\n  );\n}\n","import React from 'react';\nimport {\n  useParams,\n} from 'react-router-dom';\nimport BottomNav from './BottomNav';\nimport styles from '../styles/ItemDetails.module.scss';\n\nfunction ItemDetails() {\n  const { itemId } = useParams();\n  return (\n    <>\n      <div className={styles.page}>\n        <div className={styles.title}>{itemId}</div>\n        <div className={styles.description}>Description</div>\n        <BottomNav />\n      </div>\n    </>\n  );\n}\n\nexport default ItemDetails;\n","const changeFilter = category => ({\n  type: 'CHANGE_FILTER',\n  category,\n});\n\nfunction getCategories(data) {\n  return {\n    type: 'UPDATE_CATEGORIES',\n    data,\n  };\n}\n\nconst loadCategories = dispatch => {\n  fetch('https://api.publicapis.org/categories')\n    .then(response => response.json())\n    .then(data => {\n      dispatch(getCategories(data));\n    });\n};\n\nexport { changeFilter, loadCategories };\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from '../styles/LoadingAnim.module.scss';\n\nexport default function CircularIndeterminate() {\n  return (\n    <div className={styles.position}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport Item from '../Components/Item';\nimport SearchBar from '../Components/SearchBar';\nimport ItemDetails from '../Components/ItemDetails';\nimport { changeFilter, loadCategories } from '../actions/actions';\nimport LoadingAnim from '../Components/LoadingAnim';\n\nconst ItemList = () => {\n  const items = useSelector(state => state.items);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const handleFilter = value => dispatch(changeFilter(value));\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    loadCategories(dispatch);\n  },\n  [category]);\n\n  let filteredItems = [];\n  let itemList = [];\n\n  try {\n    filteredItems = category === 'All' ? items[0] : items[0].filter(item => item === category);\n    itemList = filteredItems.map(item => (\n      <Item\n        title={item}\n        key={item}\n        pathLink={`${match.path}/${item}`}\n      />\n    ));\n  } catch (error) {\n    return <LoadingAnim />;\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route path={`${match.path}/:itemId`}>\n          <ItemDetails />\n        </Route>\n        <Route path={match.path}>\n          <div>\n            <SearchBar items={items[0]} changeFilter={handleFilter} />\n            {itemList}\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SearchIcon from '@material-ui/icons/Search';\nimport styles from '../styles/AppBar.module.scss';\n\nexport default function ButtonAppBar() {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={styles.flex}>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" href=\"/react-redux\">\n          <SettingsIcon />\n        </IconButton>\n        <Typography variant=\"h6\">\n          API\n        </Typography>\n        <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" href=\"/react-redux\">\n          <SearchIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport './App.scss';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport ItemList from './ItemList';\nimport AppBar from '../Components/AppBar';\n\nexport default function App() {\n  return (\n    <div>\n      <AppBar />\n      <Router>\n        <Switch>\n          <Route path=\"/itemList\">\n            <ItemList />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/itemList\" />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","const filterReducer = (state = 'All', action) => {\n  if (action.type === 'CHANGE_FILTER') {\n    return `${action.category}`;\n  }\n  return state;\n};\n\nexport default filterReducer;\n","const itemReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'UPDATE_CATEGORIES':\n      return [\n        action.data,\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default itemReducer;\n","import { combineReducers } from 'redux';\nimport filterReducer from './filter';\nimport itemReducer from './items';\n\nconst rootReducer = combineReducers({\n  items: itemReducer,\n  category: filterReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\nimport App from './Containers/App';\nimport rootReducer from './reducers/root';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}