{"version":3,"sources":["styles/SearchBar.module.scss","styles/BottomNav.module.scss","styles/ItemDetails.module.scss","Components/SearchBar.js","Components/BottomNav.js","actions/actions.js","Components/ItemDetails.js","Containers/ItemList.js"],"names":["module","exports","SearchBar","items","changeFilter","Autocomplete","className","styles","bar","onInputChange","event","newInputValue","onChange","newValue","options","getOptionLabel","option","renderInput","params","TextField","label","variant","BottomNav","React","useState","value","setValue","BottomNavigation","position","showLabels","BottomNavigationAction","flex","icon","ItemDetails","itemId","useParams","dispatch","useDispatch","entries","useSelector","state","itemList","Object","keys","length","category","fetch","then","response","json","data","type","getEntries","loadEntries","map","item","Button","key","API","color","href","Link","button","rel","target","itemTitle","Description","error","LoadingAnim","bg","page","title","Item","lazy","ItemList","match","useRouteMatch","getCategories","loadCategories","filter","pathLink","path"],"mappings":"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","file":"static/js/4.6ff80c2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SearchBar_bar__31-Xm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"BottomNav_position__1uiag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ItemDetails_bg__qqBPx\",\"page\":\"ItemDetails_page__3cHRh\",\"title\":\"ItemDetails_title__12DKQ\",\"itemTitle\":\"ItemDetails_itemTitle__2OXwE\",\"button\":\"ItemDetails_button__2e8_B\"};","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport styles from '../styles/SearchBar.module.scss';\n\nconst SearchBar = ({ items, changeFilter }) => (\n  <Autocomplete\n    className={styles.bar}\n    onInputChange={(event, newInputValue) => {\n      if (newInputValue === '') { changeFilter('All'); }\n    }}\n    onChange={(event, newValue) => (newValue ? changeFilter(newValue) : 'ALL')}\n    options={items}\n    getOptionLabel={option => option}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n    renderInput={params => <TextField {...params} label=\"Filter Results\" variant=\"outlined\" />}\n  />\n);\n\nSearchBar.propTypes = {\n  // items: PropTypes.arrayOf(PropTypes.shape({\n  //   API: PropTypes.string,\n  //   Auth: PropTypes.string,\n  //   Category: PropTypes.string,\n  //   Cors: PropTypes.string,\n  //   Description: PropTypes.string,\n  //   HTTPS: PropTypes.bool,\n  //   Link: PropTypes.string,\n  // })).isRequired,\n  items: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport StarIcon from '@material-ui/icons/Star';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport styles from '../styles/BottomNav.module.scss';\n\nexport default function BottomNav() {\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      className={styles.position}\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n    >\n      <BottomNavigationAction className={styles.flex} label=\"Like\" icon={<FavoriteIcon />} />\n      <BottomNavigationAction label=\"Favourite\" icon={<StarIcon />} />\n      <BottomNavigationAction label=\"Share\" icon={<ShareIcon />} />\n    </BottomNavigation>\n  );\n}\n","const changeFilter = category => ({\n  type: 'CHANGE_FILTER',\n  category,\n});\n\nfunction getCategories(data) {\n  return {\n    type: 'UPDATE_CATEGORIES',\n    data,\n  };\n}\n\nfunction getEntries(data) {\n  return {\n    type: 'UPDATE_ENTRIES',\n    data,\n  };\n}\n\nconst loadCategories = dispatch => {\n  fetch('https://api.publicapis.org/categories')\n    .then(response => response.json())\n    .then(data => {\n      dispatch(getCategories(data));\n    });\n};\n\nconst loadEntries = (dispatch, category) => {\n  fetch(`https://api.publicapis.org/entries?category=${category}&https=true`)\n    .then(response => response.json())\n    .then(data => {\n      dispatch(getEntries(data.entries));\n    });\n};\n\nexport { changeFilter, loadCategories, loadEntries };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport BottomNav from './BottomNav';\nimport styles from '../styles/ItemDetails.module.scss';\nimport { loadEntries } from '../actions/actions';\nimport LoadingAnim from './LoadingAnim';\n\nfunction ItemDetails() {\n  const { itemId } = useParams();\n  const dispatch = useDispatch();\n  const entries = useSelector(state => state.entries);\n  let itemList = [];\n\n  if (Object.keys(entries).length === 0) { loadEntries(dispatch, itemId); }\n  try {\n    itemList = entries[0].map(item => (\n      <Button key={item.API} variant=\"contained\" color=\"primary\" href={item.Link} className={styles.button} rel=\"noopener noreferrer\" target=\"_blank\">\n        <span className={styles.itemTitle}>{item.API}</span>\n        {item.Description}\n      </Button>\n    ));\n  } catch (error) {\n    return <LoadingAnim />;\n  }\n\n  return (\n    <div className={styles.bg}>\n      <div className={styles.page}>\n        <div className={styles.title}>\n          {itemId}\n          {' '}\n          API\n        </div>\n        {itemList}\n        <BottomNav />\n      </div>\n    </div>\n  );\n}\n\nexport default ItemDetails;\n","import React, { lazy, Suspense } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport SearchBar from '../Components/SearchBar';\nimport ItemDetails from '../Components/ItemDetails';\nimport { changeFilter, loadCategories } from '../actions/actions';\nimport LoadingAnim from '../Components/LoadingAnim';\n\nconst Item = lazy(() => import('../Components/Item'));\n\nconst ItemList = () => {\n  const items = useSelector(state => state.items);\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const handleFilter = value => dispatch(changeFilter(value));\n  const match = useRouteMatch();\n\n  if (items.length === 0) { loadCategories(dispatch); }\n\n  let filteredItems = [];\n  let itemList = [];\n  try {\n    filteredItems = category === 'All' ? items[0] : items[0].filter(item => item === category);\n    itemList = filteredItems.map(item => (\n\n      <Item\n        title={item}\n        key={item}\n        pathLink={`${match.path}/${item}`}\n      />\n    ));\n  } catch (error) {\n    return <LoadingAnim />;\n  }\n  return (\n    <div>\n      <Suspense>\n        <Switch>\n          <Route path={`${match.path}/:itemId`}>\n            <ItemDetails />\n          </Route>\n          <Route path={match.path}>\n            <div>\n              <SearchBar items={items[0]} changeFilter={handleFilter} />\n              {itemList}\n            </div>\n          </Route>\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default ItemList;\n"],"sourceRoot":""}